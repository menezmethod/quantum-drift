* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --neon-text-color: #f40183;
  --neon-border-color: #08f;
  --bg-color: #000;
  --secondary-color: #0ff;
  --accent-color: #ff00ff;
  --success-color: #00ff88;
  --warning-color: #ffaa00;
  --danger-color: #ff3300;
}

body {
  font-family: 'Orbitron', sans-serif;
  background-color: var(--bg-color);
  color: #fff;
  overflow: hidden;
}

/* Loading Screen */
#loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--bg-color);
  z-index: 100;
}

.loading-content {
  text-align: center;
}

.loading-content h1 {
  font-size: 4rem;
  margin-bottom: 2rem;
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px var(--neon-text-color),
    0 0 20px var(--neon-text-color), 0 0 25px var(--neon-text-color),
    0 0 30px var(--neon-text-color), 0 0 35px var(--neon-text-color);
}

.loader {
  border: 5px solid transparent;
  border-top: 5px solid var(--neon-text-color);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
  margin: 0 auto 1rem;
  box-shadow: 0 0 10px var(--neon-text-color);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Start Screen */
#start-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 90;
}

.start-content {
  text-align: center;
}

.start-content h1 {
  font-size: 5rem;
  margin-bottom: 3rem;
  animation: pulse 1.5s infinite alternate;
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px var(--neon-text-color),
    0 0 20px var(--neon-text-color), 0 0 25px var(--neon-text-color),
    0 0 30px var(--neon-text-color), 0 0 35px var(--neon-text-color);
}

@keyframes pulse {
  from {
    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px var(--neon-text-color),
      0 0 20px var(--neon-text-color), 0 0 25px var(--neon-text-color),
      0 0 30px var(--neon-text-color), 0 0 35px var(--neon-text-color);
  }
  to {
    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px var(--neon-text-color),
      0 0 20px var(--neon-text-color), 0 0 25px var(--neon-text-color),
      0 0 30px var(--neon-text-color), 0 0 35px var(--neon-text-color), 
      0 0 40px var(--neon-text-color), 0 0 45px var(--neon-text-color);
  }
}

/* Buttons */
.glow-button {
  background-color: transparent;
  color: var(--neon-border-color);
  border: 0.2rem solid var(--neon-border-color);
  border-radius: 0.5rem;
  padding: 1rem 2rem;
  font-size: 1.5rem;
  font-family: 'Orbitron', sans-serif;
  cursor: pointer;
  transition: all 0.3s;
  text-shadow: 0 0 5px var(--neon-border-color), 0 0 10px var(--neon-border-color);
  box-shadow: 0 0 10px var(--neon-border-color), inset 0 0 10px var(--neon-border-color);
}

.glow-button:hover {
  background-color: var(--neon-border-color);
  color: #000;
  box-shadow: 0 0 20px var(--neon-border-color), inset 0 0 20px #000;
}

/* Canvas */
canvas {
  display: block;
}

/* HUD Elements */
.hud {
  position: fixed;
  top: 20px;
  left: 20px;
  color: var(--secondary-color);
  font-size: 1rem;
  text-shadow: 0 0 5px var(--secondary-color);
  z-index: 100;
  pointer-events: none;
}

/* Controls info */
.controls-info {
  position: fixed;
  bottom: 20px;
  left: 20px;
  color: var(--secondary-color);
  font-size: 0.8rem;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 10px;
  border: 1px solid var(--neon-border-color);
  border-radius: 5px;
}

.hidden {
  display: none !important;
}

/* Controls */
.control-indicators {
  position: fixed;
  bottom: 20px;
  left: 20px;
  z-index: 100;
  display: flex;
  flex-direction: column;
  gap: 15px;
  transition: opacity 0.5s ease, transform 0.3s ease;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 10px;
  padding: 15px;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
  border: 1px solid rgba(0, 255, 255, 0.4);
  backdrop-filter: blur(5px);
}

.control-indicators.visible {
  opacity: 1;
  transform: translateY(0);
}

.control-indicators.fading {
  opacity: 0.2;
  transform: translateY(10px);
}

.control-indicators.hidden {
  opacity: 0;
  transform: translateY(30px);
  pointer-events: none;
}

.control-group {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  justify-content: center;
}

.movement-controls {
  display: grid;
  grid-template-areas:
    ".    forward    ."
    "left backward right"
    "strafeLeft fire strafeRight";
  grid-gap: 5px;
}

.weapon-controls {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.key-indicator {
  width: 50px;
  height: 50px;
  background: rgba(20, 20, 30, 0.8);
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #aaf;
  font-family: 'Rajdhani', sans-serif;
  border: 1px solid rgba(0, 200, 255, 0.2);
  transition: all 0.2s ease;
  box-shadow: 0 0 5px rgba(0, 200, 255, 0.1);
  overflow: hidden;
}

.key-indicator.active {
  background: rgba(0, 150, 200, 0.4);
  color: #fff;
  border-color: rgba(0, 255, 255, 0.8);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
  transform: scale(1.05);
}

.key-indicator .key {
  font-size: 12px;
  background: rgba(0, 0, 0, 0.5);
  padding: 2px 5px;
  border-radius: 4px;
  margin-bottom: 3px;
  font-weight: bold;
}

.key-indicator .label {
  font-size: 18px;
  line-height: 1;
}

.weapon-key {
  background: rgba(30, 20, 40, 0.8);
  border-color: rgba(255, 100, 255, 0.2);
}

.weapon-key.active {
  background: rgba(150, 0, 200, 0.4);
  border-color: rgba(255, 100, 255, 0.8);
  box-shadow: 0 0 15px rgba(255, 100, 255, 0.5);
}

.controls-hint {
  text-align: center;
  font-size: 12px;
  color: rgba(255, 255, 255, 0.6);
  margin-top: 5px;
  font-family: 'Rajdhani', sans-serif;
}

/* Game UI */
.game-ui {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 10;
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 220px;
  background: rgba(0, 0, 0, 0.5);
  padding: 15px;
  border-radius: 10px;
  backdrop-filter: blur(5px);
  box-shadow: 0 0 15px rgba(0, 200, 255, 0.2);
  border: 1px solid rgba(0, 200, 255, 0.3);
  transition: all 0.3s ease;
}

.status-bars {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.bar-container {
  display: flex;
  align-items: center;
  gap: 10px;
}

.bar-label {
  width: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  color: #fff;
  font-weight: bold;
}

.bar-outer {
  flex: 1;
  height: 10px;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 5px;
  overflow: hidden;
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
}

.bar-inner {
  height: 100%;
  transition: width 0.3s ease, background-color 0.3s ease;
  border-radius: 4px;
  position: relative;
  overflow: hidden;
}

.health-bar {
  background: linear-gradient(90deg, #0f0, #5f0);
  box-shadow: 0 0 8px rgba(0, 255, 0, 0.5);
}

.health-bar.warning {
  background: linear-gradient(90deg, #ff0, #fa0);
  box-shadow: 0 0 8px rgba(255, 255, 0, 0.5);
}

.health-bar.critical {
  background: linear-gradient(90deg, #f00, #a00);
  box-shadow: 0 0 8px rgba(255, 0, 0, 0.5);
  animation: pulse-critical 0.8s infinite;
}

.energy-bar {
  background: linear-gradient(90deg, #00f, #06f);
  box-shadow: 0 0 8px rgba(0, 0, 255, 0.5);
}

.energy-bar.warning {
  background: linear-gradient(90deg, #09f, #07a);
  box-shadow: 0 0 8px rgba(0, 100, 255, 0.5);
}

.energy-bar.critical {
  background: linear-gradient(90deg, #07f, #059);
  box-shadow: 0 0 8px rgba(0, 50, 255, 0.5);
}

.weapon-indicator {
  display: flex;
  align-items: center;
  margin-top: 5px;
  background: rgba(0, 0, 0, 0.4);
  border-radius: 5px;
  padding: 5px 10px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.weapon-label {
  font-size: 14px;
  color: #aaa;
  margin-right: 10px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.weapon-name {
  flex: 1;
  text-align: right;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  letter-spacing: 1px;
  text-shadow: 0 0 5px currentColor;
}

.weapon-name.laser {
  color: #0ff;
}

.weapon-name.grenade {
  color: #f70;
}

.weapon-name.bounce {
  color: #0f6;
}

/* Health bar shine effect */
.bar-inner::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shine 2s infinite;
}

@keyframes shine {
  0% { left: -100%; }
  100% { left: 200%; }
}

@media (max-width: 768px) {
  .game-ui {
    top: 10px;
    right: 10px;
    width: 180px;
    padding: 10px;
  }
  
  .bar-label, .weapon-label {
    font-size: 12px;
  }
  
  .weapon-name {
    font-size: 14px;
  }
}

.bar-percentage {
  font-size: 12px;
  color: #fff;
  min-width: 40px;
  text-align: right;
  font-weight: bold;
  font-family: 'Rajdhani', sans-serif;
}

/* Position indicators in the grid */
#indicator-forward { grid-area: forward; }
#indicator-backward { grid-area: backward; }
#indicator-left { grid-area: left; }
#indicator-right { grid-area: right; }
#indicator-strafeLeft { grid-area: strafeLeft; }
#indicator-strafeRight { grid-area: strafeRight; }
#indicator-fire { grid-area: fire; }

/* Special styling for fire key */
#indicator-fire {
  width: 80px;
  grid-column: span 3;
}

/* Collision Flash Effect */
.collision-flash {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 0, 0, 0.2);
  z-index: 1000;
  pointer-events: none;
  animation: flash 0.15s ease-out;
}

@keyframes flash {
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 0; }
}

/* Score Display */
.score-display {
  position: fixed;
  top: 20px;
  right: 20px;
  font-size: 1.5rem;
  color: var(--neon-text-color);
  text-shadow: 0 0 5px var(--neon-text-color);
  z-index: 100;
}

/* Mobile Touch Controls */
.touch-controls {
  position: fixed;
  bottom: 20px;
  left: 20px;
  z-index: 100;
  display: none; /* Hidden by default, shown on touch devices */
}

/* Media query for touch devices */
@media (pointer: coarse) {
  .touch-controls {
    display: block;
  }
  
  .controls-info {
    display: none; /* Hide keyboard controls info on touch devices */
  }
} 