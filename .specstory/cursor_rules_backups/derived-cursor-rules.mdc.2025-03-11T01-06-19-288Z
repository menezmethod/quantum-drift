
## PROJECT OVERVIEW

This project, Quantum Drift, is a 3D space combat game.  The current focus is on implementing features outlined in `QUANTUM_DRIFT_CHECKLIST.md`, including a bounce laser, an infinite alien map, and refining the user interface.


## CODE STYLE

Maintain consistent indentation (2 spaces).  Follow standard JavaScript naming conventions.  Comments should be clear and concise.


## FOLDER ORGANIZATION

The project follows a modular structure.  See the project structure for details.  This structure should be maintained.


## TECH STACK

- JavaScript (ES6+)
- Three.js (for 3D rendering)
- Webpack (for module bundling)
- (Add any other libraries or tools used)


## PROJECT-SPECIFIC STANDARDS

- All sound effects should be in the `src/assets/sounds` folder.
-  New features should be implemented incrementally and thoroughly tested.
-  Use a consistent approach to collision detection and handling.


## WORKFLOW & RELEASE RULES

- Utilize a version control system (Git) for all code changes.
- Commit messages should be clear and descriptive.
- Feature branches should be used for new features.
-  Bug fixes should be addressed promptly.
-  The in-game menu accessed by pressing ESC should be consistent with the main menu.


## REFERENCE EXAMPLES

- Existing sound effect implementation in `src/index.js` can serve as a reference.
- The `BaseShip` class's `takeDamage` method provides an example of damage handling.


## PROJECT DOCUMENTATION & CONTEXT SYSTEM

-  `QUANTUM_DRIFT_CHECKLIST.md` tracks development progress.  Updates to the checklist should be reflected in this file.  Version updates to this document should be noted here.


## DEBUGGING

- Utilize the browser's developer tools for debugging.
- Add console logs for tracking variables and function calls.


## FINAL DOs AND DON'Ts

- **DO** write clear, concise, and well-documented code.
- **DO** test thoroughly before merging into main branch.
- **DO** use version control effectively.
- **DON'T** commit broken code.
- **DON'T** introduce unnecessary complexity.
- **DON'T** neglect error handling.
- **DON'T** deviate from the established folder structure unless there is a justified reason.